/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import "ATVPushNotificationListener.h"
#import "LTAVPlayerDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, NSArray, NSData, ATVRadioMetricsController, ATVDataQuery, RadioModel, ATVBackgroundTask, ATVDataCollection, ATVDataItem, NSDate, NSMutableArray, NSNumber, ATVRadioSkipLimiter, NSTimer, NSString;

__attribute__((visibility("hidden")))
@interface ATVRadioDataClient : XXUnknownSuperclass <ATVPushNotificationListener, LTAVPlayerDelegate> {
	BOOL _explicitContentWasAllowed;	// 4 = 0x4
	BOOL _deviceActivated;	// 5 = 0x5
	BOOL _lastPlayerStatePaused;	// 6 = 0x6
	BOOL _pausingDueToInactivity;	// 7 = 0x7
	BOOL _stoppingDueToInactivity;	// 8 = 0x8
	BOOL _iTunesMatchPurchased;	// 9 = 0x9
	BOOL _trackDidPlayToEnd;	// 10 = 0xa
	BOOL _iADEngineEnabledInternal;	// 11 = 0xb
	BOOL _iADAdsOptedInStatus;	// 12 = 0xc
	ATVRadioMetricsController *_metricsController;	// 16 = 0x10
	RadioModel *_radioModel;	// 20 = 0x14
	NSNumber *_accountDSID;	// 24 = 0x18
	ATVBackgroundTask *_radioPushNotificationTask;	// 28 = 0x1c
	NSDate *_lastSyncTime;	// 32 = 0x20
	ATVDataQuery *_playbackItemsQuery;	// 36 = 0x24
	id _playbackCompletionHandler;	// 40 = 0x28
	ATVDataCollection *_playbackStation;	// 44 = 0x2c
	NSArray *_playbackStationInitialTracks;	// 48 = 0x30
	NSMutableArray *_jinglePlayEventsQueue;	// 52 = 0x34
	NSTimer *_jinglePlayEventsFlushTimer;	// 56 = 0x38
	ATVRadioSkipLimiter *_skipLimiter;	// 60 = 0x3c
	NSData *_songAdData;	// 64 = 0x40
	NSMutableDictionary *_songBreakAd;	// 68 = 0x44
	NSMutableDictionary *_songSkipAd;	// 72 = 0x48
	ATVDataItem *_lastWillChangeItem;	// 76 = 0x4c
	unsigned long long _radioModelUpdateGlobalVersion;	// 80 = 0x50
	unsigned long long _songStationAdamID;	// 88 = 0x58
}
@property(retain, nonatomic) NSNumber *accountDSID;	// G=0x4f569; S=0x4f579; @synthesize=_accountDSID
@property(assign, nonatomic) BOOL deviceActivated;	// G=0x4f5d9; S=0x4f5e9; @synthesize=_deviceActivated
@property(readonly, assign, nonatomic) double dismissDialogTime;	// G=0x4ec71; 
@property(assign, nonatomic) BOOL iADAdsOptedInStatus;	// G=0x4f8f9; S=0x4f909; @synthesize=_iADAdsOptedInStatus
@property(assign, nonatomic) BOOL iADEngineEnabledInternal;	// G=0x4f8d9; S=0x4f8e9; @synthesize=_iADEngineEnabledInternal
@property(assign, nonatomic) BOOL iAdEngineEnabled;	// G=0x4e7bd; S=0x4e7d5; 
@property(readonly, assign, nonatomic) NSString *iAdID;	// G=0x4e9bd; 
@property(assign, nonatomic) BOOL iAdOptInStatus;	// G=0x4e795; S=0x4e7ad; 
@property(assign, nonatomic) BOOL iTunesMatchPurchased;	// G=0x4f7d9; S=0x4f7e9; @synthesize=_iTunesMatchPurchased
@property(assign, nonatomic) __weak NSTimer *jinglePlayEventsFlushTimer;	// G=0x4f76d; S=0x4f78d; @synthesize=_jinglePlayEventsFlushTimer
@property(retain, nonatomic) NSMutableArray *jinglePlayEventsQueue;	// G=0x4f735; S=0x4f745; @synthesize=_jinglePlayEventsQueue
@property(assign, nonatomic) BOOL lastPlayerStatePaused;	// G=0x4f6d5; S=0x4f6e5; @synthesize=_lastPlayerStatePaused
@property(retain, nonatomic) NSDate *lastSyncTime;	// G=0x4f5f9; S=0x4f609; @synthesize=_lastSyncTime
@property(retain, nonatomic) ATVDataItem *lastWillChangeItem;	// G=0x4f919; S=0x4f929; @synthesize=_lastWillChangeItem
@property(readonly, assign, nonatomic) unsigned maxGetTracksRetryCount;	// G=0x4ed99; 
@property(readonly, assign, nonatomic) ATVRadioMetricsController *metricsController;	// G=0x4f4f5; @synthesize=_metricsController
@property(assign, nonatomic) BOOL pausingDueToInactivity;	// G=0x4f6f5; S=0x4f705; @synthesize=_pausingDueToInactivity
@property(copy, nonatomic) id playbackCompletionHandler;	// G=0x4f669; S=0x4f67d; @synthesize=_playbackCompletionHandler
@property(retain, nonatomic) ATVDataQuery *playbackItemsQuery;	// G=0x4f631; S=0x4f641; @synthesize=_playbackItemsQuery
@property(retain, nonatomic) ATVDataCollection *playbackStation;	// G=0x4f68d; S=0x4cf11; @synthesize=_playbackStation
@property(retain, nonatomic) NSArray *playbackStationInitialTracks;	// G=0x4f69d; S=0x4f6ad; @synthesize=_playbackStationInitialTracks
@property(readonly, assign, nonatomic) double playerIdlePlayingStopTime;	// G=0x4ed61; 
@property(readonly, assign, nonatomic) double playerPausedStopTime;	// G=0x4ed7d; 
@property(retain, nonatomic) RadioModel *radioModel;	// G=0x4f505; S=0x4f515; @synthesize=_radioModel
@property(assign, nonatomic) unsigned long long radioModelUpdateGlobalVersion;	// G=0x4f53d; S=0x4f555; @synthesize=_radioModelUpdateGlobalVersion
@property(retain, nonatomic) ATVBackgroundTask *radioPushNotificationTask;	// G=0x4f5a1; S=0x4f5b1; @synthesize=_radioPushNotificationTask
@property(readonly, assign, nonatomic) double serverDurationToCountAsPlayed;	// G=0x4eb81; 
@property(retain, nonatomic) ATVRadioSkipLimiter *skipLimiter;	// G=0x4f7a1; S=0x4f7b1; @synthesize=_skipLimiter
@property(copy, nonatomic) NSData *songAdData;	// G=0x4f845; S=0x4f859; @synthesize=_songAdData
@property(retain, nonatomic) NSMutableDictionary *songBreakAd;	// G=0x4f869; S=0x4f879; @synthesize=_songBreakAd
@property(retain, nonatomic) NSMutableDictionary *songSkipAd;	// G=0x4f8a1; S=0x4f8b1; @synthesize=_songSkipAd
@property(assign, nonatomic) unsigned long long songStationAdamID;	// G=0x4f819; S=0x4f831; @synthesize=_songStationAdamID
@property(assign, nonatomic) BOOL stoppingDueToInactivity;	// G=0x4f715; S=0x4f725; @synthesize=_stoppingDueToInactivity
@property(assign, nonatomic) BOOL trackDidPlayToEnd;	// G=0x4f7f9; S=0x4f809; @synthesize=_trackDidPlayToEnd
+ (void)purchaseRadioTrack:(id)track reporting:(id)reporting;	// 0x4e1a1
+ (id)purchaseReportingStringWithTrack:(id)track station:(id)station baseReportingString:(id)string;	// 0x4e501
+ (id)radioDataClient;	// 0x4c909
+ (id)radioKeyBagDict;	// 0x4cb2d
- (id)init;	// 0x4cbc9
- (void).cxx_destruct;	// 0x4f951
- (void)_adPlayerDidPlayToEnd:(id)_adPlayer;	// 0x5b279
- (void)_adPlayerWillStop:(id)_adPlayer;	// 0x5b249
- (void)_addPlayEventToQueue:(id)queue;	// 0x60c2d
- (void)_appendTracks:(id)tracks;	// 0x5f65d
- (id)_atvTracksFromRadioTracks:(id)radioTracks stationID:(id)anId stationHash:(id)hash forPreview:(BOOL)preview;	// 0x51089
- (BOOL)_canPlayerSkipTrack;	// 0x5dec1
- (void)_cleanupPlayback;	// 0x5c1d9
- (id)_clientBundleID;	// 0x63ca1
- (void)_completeQuery:(id)query withStatus:(int)status queue:(id)queue completionHandler:(id)handler;	// 0x55ec1
- (id)_completionHandlerForItemsQuery:(id)itemsQuery attemptCount:(unsigned)count;	// 0x5c9c9
- (id)_correspondingDescriptorForItem:(id)item withDescriptors:(id)descriptors;	// 0x5c3d1
- (void)_fetchAndAppendTracks;	// 0x5d171
- (void)_getPersonalizedStations:(id *)stations sponsoredStationIDs:(id *)ids;	// 0x546c1
- (void)_handleAdRequestPropertiesWithToken:(long)token adType:(int)type headers:(id)headers requestProperties:(id)properties;	// 0x62d85
- (void)_handleFeaturedStationsQuery:(id)query excludeFeaturedStations:(BOOL)stations completionQueue:(id)queue completionHandler:(id)handler;	// 0x54881
- (void)_handleGenreStationsQuery:(id)query withGenreIdentifier:(id)genreIdentifier completionQueue:(id)queue completionHandler:(id)handler;	// 0x557b1
- (void)_handleGlobalHistoryItemsQuery:(id)query station:(id)station completionQueue:(id)queue completionHandler:(id)handler;	// 0x5383d
- (void)_handleJingleRequestWithToken:(long)token urlKeyInBag:(id)bag requestBody:(id)body requestHeaders:(id)headers;	// 0x6371d
- (void)_handleOptInStatus:(int)status forUser:(id)user;	// 0x61edd
- (void)_handleSearchStationsQuery:(id)query withSearchTerm:(id)searchTerm excludeStations:(BOOL)stations completionQueue:(id)queue completionHandler:(id)handler;	// 0x550e9
- (void)_heartBeatTokenChangedNotification:(id)notification;	// 0x62401
- (id)_heartBeatTokenData;	// 0x61145
- (id)_heartBeatTokenStringWithData:(id)data;	// 0x611f1
- (void)_heartBeatTokenUpdateNotification;	// 0x6105d
- (id)_iAdIdentifier;	// 0x61fb1
- (void)_iTunesAccountActivity:(id)activity;	// 0x5032d
- (void)_iTunesAccountChanged;	// 0x50511
- (void)_iTunesAccountReauthenticated;	// 0x505e5
- (double)_idleTimeForKey:(id)key;	// 0x4ee71
- (BOOL)_initRadioClient;	// 0x4d2b9
- (void)_initializeAdEngine;	// 0x612f9
- (void)_initiateHiddenStationPlaybackWithTracks:(id)tracks;	// 0x5bcd5
- (void)_initiatePlayerWithTracks:(id)tracks station:(id)station;	// 0x5b1ed
- (void)_initiateStationPlaybackWithInitialAd:(id)initialAd;	// 0x5bce9
- (void)_initiateStationPlaybackWithTracks:(id)tracks;	// 0x5bcc1
- (void)_initiateStationPlaybackWithTracks:(id)tracks presentPlayer:(BOOL)player;	// 0x5b879
- (void)_initiateStreamingStationPlaybackWithInitialAd:(id)initialAd;	// 0x5b489
- (void)_insertPlayEventForItem:(id)item withTimedMetadata:(id)timedMetadata;	// 0x60939
- (void)_internetAvailabilityChanged:(id)changed;	// 0x4e901
- (id)_itemDataDictWithLikeBanItem:(id)likeBanItem;	// 0x532cd
- (void)_itemPlaybackWillPauseDueToInactivity:(id)_itemPlayback;	// 0x6002d
- (void)_itemPlaybackWillStopDueToInactivity:(id)_itemPlayback;	// 0x60041
- (void)_jinglePlayEventsFlushTimerFired:(id)fired;	// 0x61041
- (id)_newItemsQueryWithStation:(id)station forInitialPlayback:(BOOL)initialPlayback;	// 0x5f4dd
- (void)_optInStatusChangedNotification:(id)statusChangedNotification;	// 0x621cd
- (BOOL)_parentalAccessRestricted;	// 0x4e88d
- (void)_parentalControlAccessChanged:(id)changed;	// 0x4e7e9
- (id)_pendingPlayEventsByClearingQueue;	// 0x60d39
- (void)_performInitialSync;	// 0x4d579
- (void)_periodicMetadataChanged:(id)changed;	// 0x5daf1
- (id)_periodicSyncTask;	// 0x4f049
- (void)_playerAssetChanged:(id)changed;	// 0x5c641
- (void)_playerNextMediaAssetAction:(id)action;	// 0x5d29d
- (void)_playerPlaylistAssetPlayedToEndTime:(id)endTime;	// 0x5d3c5
- (void)_playerStateChanged:(id)changed;	// 0x5d3f9
- (void)_preemptivelySchedulePolicyEngineSongBreakAd:(id)ad songSkipAd:(id)ad2 forTrackWithData:(id)data stationAdamID:(unsigned long long)anId;	// 0x62b2d
- (void)_purgeCachedTracksForStation:(id)station;	// 0x5aba1
- (void)_radioModelUpdated:(id)updated;	// 0x4fa99
- (void)_recordAdEventsForAdItem:(id)adItem avAsset:(id)asset;	// 0x5fb7d
- (void)_recordJinglePlayEventWithItem:(id)item endReason:(int)reason;	// 0x60059
- (void)_registerPushForUser:(id)user;	// 0x50a61
- (void)_removeItemFromTracksForPlayback:(id)playback;	// 0x5f951
- (void)_removeObservers;	// 0x5c269
- (void)_reportJinglePlayEventsWithReason:(id)reason;	// 0x60761
- (void)_reportTileImpressionWithStation:(id)station timeStamp:(double)stamp;	// 0x63aad
- (void)_resetIAdIdentifier;	// 0x620b1
- (void)_scheduleAdsWithReason:(unsigned)reason;	// 0x5ea39
- (void)_schedulePolicyEngineAd:(id)ad forTrackWithAdData:(id)adData stationAdamID:(unsigned long long)anId;	// 0x62521
- (void)_schedulePolicyEngineStationEntryAd:(id)ad stationAdamID:(unsigned long long)anId;	// 0x62961
- (void)_screenSaverStarted:(id)started;	// 0x5dda5
- (void)_screenSaverStopped:(id)stopped;	// 0x5de09
- (void)_sendPlaybackStarted:(unsigned)started;	// 0x5ae69
- (void)_setActivePlaybackStation:(id)station;	// 0x5c029
- (void)_setAdOptInStatus:(BOOL)status;	// 0x620f1
- (void)_setIAdEngineEnabled:(BOOL)enabled forceOperation:(BOOL)operation;	// 0x61989
- (void)_setSponsoredStationIDs:(id)ids;	// 0x63c3d
- (void)_shutDownPlayback;	// 0x5c079
- (void)_startPeriodicSyncTask;	// 0x4f425
- (void)_startPlaybackWithStation:(id)station startupTracks:(id)tracks completionHandler:(id)handler;	// 0x59ed9
- (id)_stationsForGenreDictionaries:(id)genreDictionaries genreIdentifierRequired:(BOOL)required;	// 0x555e9
- (void)_stopPeriodicSyncTask;	// 0x4f48d
- (void)_syncToServer:(id)server;	// 0x4df19
- (id)_trackDictFromDataItem:(id)dataItem;	// 0x57089
- (id)_trackPlaybackDescriptorsWithItems:(id)items;	// 0x5b699
- (void)_unregisterPush;	// 0x50af5
- (void)_unscheduleUpcomingItemsWithoutCorrespondingDescriptors;	// 0x5a64d
- (void)_updateAdActivity;	// 0x63bed
- (void)_updateAdPolicyEngineWithStation:(id)station;	// 0x6242d
- (void)_updatePlayerWithTracks:(id)tracks station:(id)station;	// 0x5af55
- (void)_updateUserData;	// 0x61c91
- (void)_urlBagLoaded:(id)loaded;	// 0x4d195
- (void)_userActionHandler:(id)handler;	// 0x5de6d
// declared property getter: - (id)accountDSID;	// 0x4f569
- (id)atvTracksForStation:(id)station withTracks:(id)tracks forPreview:(BOOL)preview;	// 0x50fb1
- (BOOL)canSkipTrack:(id)track;	// 0x4e649
- (void)cancelLoad:(id)load;	// 0x50a09
- (void)concreteDataClientConnect;	// 0x4cf99
- (void)concreteDataClientDisconnect;	// 0x4d8b9
- (void)connectionCompletedWithStatus:(int)status;	// 0x4da4d
- (id)currentPlayingStation;	// 0x4e639
- (void)dealloc;	// 0x4ce19
// declared property getter: - (BOOL)deviceActivated;	// 0x4f5d9
// declared property getter: - (double)dismissDialogTime;	// 0x4ec71
- (void)executeQuery:(id)query withCompletionQueue:(id)completionQueue completionHandler:(id)handler;	// 0x4dc11
- (void)handleAddStationQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x55f25
- (void)handleDeleteQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x575ed
- (void)handleHistoryItemsQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x535dd
- (void)handleItemQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x514ed
- (void)handleLikesBansQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x52ae1
- (void)handleStationItemsQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x518b5
- (void)handleStationsQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x5436d
- (void)handleStationsSortQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x58179
- (void)handleUpdateQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x58669
- (void)handleWishListItemsQuery:(id)query completionQueue:(id)queue completionHandler:(id)handler;	// 0x53fbd
// declared property getter: - (BOOL)iADAdsOptedInStatus;	// 0x4f8f9
// declared property getter: - (BOOL)iADEngineEnabledInternal;	// 0x4f8d9
// declared property getter: - (BOOL)iAdEngineEnabled;	// 0x4e7bd
// declared property getter: - (id)iAdID;	// 0x4e9bd
// declared property getter: - (BOOL)iAdOptInStatus;	// 0x4e795
// declared property getter: - (BOOL)iTunesMatchPurchased;	// 0x4f7d9
- (id)imageKeyForObject:(id)object;	// 0x507ed
- (BOOL)isExplicitContentAllowed;	// 0x4ea71
// declared property getter: - (id)jinglePlayEventsFlushTimer;	// 0x4f76d
// declared property getter: - (id)jinglePlayEventsQueue;	// 0x4f735
// declared property getter: - (BOOL)lastPlayerStatePaused;	// 0x4f6d5
// declared property getter: - (id)lastSyncTime;	// 0x4f5f9
// declared property getter: - (id)lastWillChangeItem;	// 0x4f919
- (id)loadImageForObject:(id)object size:(CGSize)size crop:(BOOL)crop completionHandler:(id)handler;	// 0x5094d
// declared property getter: - (unsigned)maxGetTracksRetryCount;	// 0x4ed99
// declared property getter: - (id)metricsController;	// 0x4f4f5
- (void)optOut;	// 0x4e9dd
// declared property getter: - (BOOL)pausingDueToInactivity;	// 0x4f6f5
// declared property getter: - (id)playbackCompletionHandler;	// 0x4f669
// declared property getter: - (id)playbackItemsQuery;	// 0x4f631
// declared property getter: - (id)playbackStation;	// 0x4f68d
// declared property getter: - (id)playbackStationInitialTracks;	// 0x4f69d
- (void)player:(id)player currentAssetWillChangeWithAVAsset:(id)currentAsset reason:(unsigned)reason;	// 0x5e495
- (BOOL)player:(id)player shouldHandleEvent:(id)event playerTime:(double)time;	// 0x5e3f9
- (void)player:(id)player willStopWithAVAsset:(id)avasset reason:(unsigned)reason;	// 0x5ecc5
// declared property getter: - (double)playerIdlePlayingStopTime;	// 0x4ed61
// declared property getter: - (double)playerPausedStopTime;	// 0x4ed7d
- (BOOL)processQueryAsync:(id)async;	// 0x4db9d
- (void)purgeCachedTracksForStation:(id)station;	// 0x4e6fd
- (void)pushNotificationServer:(id)server didReceiveMessageForTopic:(id)topic userInfo:(id)info;	// 0x50bd1
- (void)pushNotificationServerTokenDidChange:(id)pushNotificationServerToken;	// 0x50f71
// declared property getter: - (id)radioModel;	// 0x4f505
// declared property getter: - (unsigned long long)radioModelUpdateGlobalVersion;	// 0x4f53d
// declared property getter: - (id)radioPushNotificationTask;	// 0x4f5a1
- (void)reportTileImpressionWithStation:(id)station timeStamp:(double)stamp;	// 0x4e761
- (void)resetAdvertisingIdentifier;	// 0x4e9cd
// declared property getter: - (double)serverDurationToCountAsPlayed;	// 0x4eb81
// declared property setter: - (void)setAccountDSID:(id)dsid;	// 0x4f579
// declared property setter: - (void)setDeviceActivated:(BOOL)activated;	// 0x4f5e9
// declared property setter: - (void)setIADAdsOptedInStatus:(BOOL)status;	// 0x4f909
// declared property setter: - (void)setIADEngineEnabledInternal:(BOOL)internal;	// 0x4f8e9
// declared property setter: - (void)setIAdEngineEnabled:(BOOL)enabled;	// 0x4e7d5
// declared property setter: - (void)setIAdOptInStatus:(BOOL)status;	// 0x4e7ad
// declared property setter: - (void)setITunesMatchPurchased:(BOOL)purchased;	// 0x4f7e9
// declared property setter: - (void)setJinglePlayEventsFlushTimer:(id)timer;	// 0x4f78d
// declared property setter: - (void)setJinglePlayEventsQueue:(id)queue;	// 0x4f745
// declared property setter: - (void)setLastPlayerStatePaused:(BOOL)paused;	// 0x4f6e5
// declared property setter: - (void)setLastSyncTime:(id)time;	// 0x4f609
// declared property setter: - (void)setLastWillChangeItem:(id)changeItem;	// 0x4f929
// declared property setter: - (void)setPausingDueToInactivity:(BOOL)inactivity;	// 0x4f705
// declared property setter: - (void)setPlaybackCompletionHandler:(id)handler;	// 0x4f67d
// declared property setter: - (void)setPlaybackItemsQuery:(id)query;	// 0x4f641
// declared property setter: - (void)setPlaybackStation:(id)station;	// 0x4cf11
// declared property setter: - (void)setPlaybackStationInitialTracks:(id)tracks;	// 0x4f6ad
// declared property setter: - (void)setRadioModel:(id)model;	// 0x4f515
// declared property setter: - (void)setRadioModelUpdateGlobalVersion:(unsigned long long)version;	// 0x4f555
// declared property setter: - (void)setRadioPushNotificationTask:(id)task;	// 0x4f5b1
// declared property setter: - (void)setSkipLimiter:(id)limiter;	// 0x4f7b1
// declared property setter: - (void)setSongAdData:(id)data;	// 0x4f859
// declared property setter: - (void)setSongBreakAd:(id)ad;	// 0x4f879
// declared property setter: - (void)setSongSkipAd:(id)ad;	// 0x4f8b1
// declared property setter: - (void)setSongStationAdamID:(unsigned long long)anId;	// 0x4f831
// declared property setter: - (void)setStoppingDueToInactivity:(BOOL)inactivity;	// 0x4f725
// declared property setter: - (void)setTrackDidPlayToEnd:(BOOL)playToEnd;	// 0x4f809
// declared property getter: - (id)skipLimiter;	// 0x4f7a1
// declared property getter: - (id)songAdData;	// 0x4f845
// declared property getter: - (id)songBreakAd;	// 0x4f869
// declared property getter: - (id)songSkipAd;	// 0x4f8a1
// declared property getter: - (unsigned long long)songStationAdamID;	// 0x4f819
- (void)startPlaybackWithStation:(id)station startupTracks:(id)tracks completionHandler:(id)handler;	// 0x4e159
// declared property getter: - (BOOL)stoppingDueToInactivity;	// 0x4f715
- (BOOL)supportsProperty:(id)property;	// 0x4db69
// declared property getter: - (BOOL)trackDidPlayToEnd;	// 0x4f7f9
- (void)unscheduleUpcomingItemsWithoutCorrespondingDescriptors;	// 0x4e6ed
- (void)updateAdActivity;	// 0x4e785
@end

