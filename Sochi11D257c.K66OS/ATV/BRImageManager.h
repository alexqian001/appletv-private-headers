/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AppleTV-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSLock, NSObject, NSMutableDictionary, BRAsyncTaskContext, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface BRImageManager : XXUnknownSuperclass {
	unsigned long long _maxCacheSize;	// 4 = 0x4
	unsigned long long _cacheSize;	// 12 = 0xc
	unsigned long long _maxCacheCount;	// 20 = 0x14
	unsigned long long _cacheCount;	// 28 = 0x1c
	unsigned long long _cacheSizePurgeThreshhold;	// 36 = 0x24
	BOOL _cachePurging;	// 44 = 0x2c
	BOOL _purgeCacheOnLoadAndQuit;	// 45 = 0x2d
	NSString *_imageCachePath;	// 48 = 0x30
	NSObject<OS_dispatch_queue> *_imagesAccessQueue;	// 52 = 0x34
	NSMutableDictionary *_remoteImageRequests;	// 56 = 0x38
	NSLock *_remoteImageLock;	// 60 = 0x3c
	NSObject<OS_dispatch_queue> *_loadJobAccessQueue;	// 64 = 0x40
	NSObject<OS_dispatch_queue> *_pendingImageWriteQueue;	// 68 = 0x44
	BOOL _processJobs;	// 72 = 0x48
	BRAsyncTaskContext *_writeTaskContext;	// 76 = 0x4c
	int _pruneCount;	// 80 = 0x50
	BOOL _disableAccessDateUpdates;	// 84 = 0x54
	NSMutableDictionary *_images;	// 88 = 0x58
	NSMutableDictionary *_loadJobs;	// 92 = 0x5c
	NSMutableDictionary *_pendingCachedImagesToFlush;	// 96 = 0x60
}
@property(assign, nonatomic) BOOL disableAccessDateUpdates;	// G=0x46a905; S=0x46a915; @synthesize=_disableAccessDateUpdates
@property(retain, nonatomic) NSMutableDictionary *images;	// G=0x46a85d; S=0x46a86d; @synthesize=_images
@property(retain, nonatomic) NSMutableDictionary *loadJobs;	// G=0x46a895; S=0x46a8a5; @synthesize=_loadJobs
@property(retain, nonatomic) NSMutableDictionary *pendingCachedImagesToFlush;	// G=0x46a8cd; S=0x46a8dd; @synthesize=_pendingCachedImagesToFlush
@property(assign, nonatomic) int pruneCount;	// G=0x46a83d; S=0x46a84d; @synthesize=_pruneCount
+ (void)_initSerialAsyncPurgeQueue;	// 0x46a9f9
+ (void)_queuePurgeForPath:(id)path;	// 0x46ad5d
+ (BOOL)_removeCachPath:(id)path error:(id *)error;	// 0x46abc1
+ (id)fullScreenImageResizingOptions;	// 0x467d4d
+ (id)generalPurposeManager;	// 0x46862d
+ (id)screenSaverManager;	// 0x468809
+ (id)trickPlayManager;	// 0x468965
- (id)initWithCachePath:(id)cachePath purgeCacheOnLoadAndQuit:(BOOL)quit maxCacheSizeInMB:(unsigned long long)mb maxCacheCount:(unsigned long long)count cacheSizePurgeThreshholdInMB:(unsigned long long)mb5 pruneCount:(int)count6 disableAccessDateUpdates:(BOOL)updates;	// 0x467df9
- (void).cxx_destruct;	// 0x46a925
- (void)_ATVDataImageAvailable:(id)available;	// 0x46e2b1
- (void)_addLoadJobToQueue:(id)queue;	// 0x46b881
- (void)_addWriteJobToQueue:(id)queue withImageID:(id)imageID height:(int)height width:(int)width cropped:(BOOL)cropped;	// 0x46b00d
- (id)_cachedCommonImagePathForImageIDKey:(id)imageIDKey extension:(id)extension;	// 0x46e001
- (id)_cachedCroppedImageKeyForImageID:(id)imageID forSize:(CGSize)size;	// 0x46dfa5
- (id)_cachedCroppedImagePathForImageID:(id)imageID forSize:(CGSize)size extension:(id)extension;	// 0x46dec1
- (id)_cachedOriginalImagePathForImageID:(id)imageID extension:(id)extension;	// 0x46ddfd
- (id)_cachedResizedImageKeyForImageID:(id)imageID forSize:(CGSize)size;	// 0x46df49
- (id)_cachedResizedImagePathForImageID:(id)imageID forSize:(CGSize)size extension:(id)extension;	// 0x46de39
- (void)_checkCache;	// 0x46d8ad
- (void)_decrementCacheSize:(unsigned long long)size;	// 0x46d85d
- (id)_defaultResizingImageOptions;	// 0x46c721
- (id)_extensionForImageID:(id)imageID;	// 0x46e201
- (id)_imageFromWriteQueue:(id)writeQueue;	// 0x46e06d
- (void)_imageLoadFailed:(id)failed;	// 0x46d2fd
- (void)_imageLoadSucceeded:(id)succeeded;	// 0x46cf39
- (id)_imageRecordForName:(id)name;	// 0x46ae79
- (void)_incrementCacheSize:(unsigned long long)size;	// 0x46d7f9
- (void)_lowMemoryNotification:(id)notification;	// 0x46daf5
- (void)_maintainImageCache;	// 0x46c971
- (void)_performWriteJob:(id)job;	// 0x46b635
- (void)_postUnavailableImageNotification:(id)notification;	// 0x46d5dd
- (void)_postUpdateNotification:(id)notification;	// 0x46d585
- (void)_postWriteCompletedNotification:(id)notification size:(CGSize)size cropped:(BOOL)cropped;	// 0x46d665
- (void)_purgeRemoveDirectory:(BOOL)directory;	// 0x46e4d1
- (void)_removeCacheFile:(id)file;	// 0x46c915
- (void)_removeLoadJobFromQueue:(id)queue;	// 0x46ba61
- (void)_removeRemoteImageRequestNamed:(id)named;	// 0x46c7cd
- (void)_removeWriteJobFromQueue:(id)queue;	// 0x46b479
- (void)_scheduleMaintainCache;	// 0x46d9ad
- (void)_startWriteJob:(id)job;	// 0x46b3a9
- (void)_terminateNotification:(id)notification;	// 0x46da79
- (BOOL)_updateExistingImageRecord:(id)record;	// 0x46bbdd
- (id)_writeIDForImageID:(id)imageID cropped:(BOOL)cropped size:(CGSize)size;	// 0x46dd4d
- (void)_writeImage:(id)image named:(id)named forSize:(CGSize)size cropped:(BOOL)cropped;	// 0x46be09
- (id)cachePath;	// 0x46a80d
- (float)cacheSize;	// 0x46a821
- (id)cachedPathForImageID:(id)imageID;	// 0x46a611
- (void)cancelWriteForImageWithURL:(id)url imageID:(id)anId;	// 0x4691bd
- (void)dealloc;	// 0x4685c1
// declared property getter: - (BOOL)disableAccessDateUpdates;	// 0x46a905
- (id)downSampleImage:(id)image name:(id)name scaledToSize:(CGSize)size writeToDisk:(BOOL)disk;	// 0x469f55
- (id)downSampleImage:(id)image name:(id)name scaledToSize:(CGSize)size writeToDisk:(BOOL)disk original:(BOOL)original rotate:(BOOL)rotate;	// 0x469fa9
- (id)imageNameFromURL:(id)url;	// 0x468b89
- (id)imageNamed:(id)named;	// 0x469ce1
- (id)imageNamed:(id)named croppedToSize:(CGSize)size create:(BOOL)create;	// 0x4697c9
- (id)imageNamed:(id)named scaledToSize:(CGSize)size;	// 0x469c89
// declared property getter: - (id)images;	// 0x46a85d
- (BOOL)isImageAvailable:(id)available;	// 0x468ab9
- (BOOL)isImageAvailable:(id)available scaledToSize:(CGSize)size;	// 0x468b41
- (BOOL)isImageWritten:(id)written;	// 0x468b29
- (id)loadImageFromURL:(id)url headerFields:(id)fields decryptionAgent:(id)agent;	// 0x469245
- (id)loadImageFromURL:(id)url imageID:(id)anId headerFields:(id)fields decryptionAgent:(id)agent writeToCache:(BOOL)cache;	// 0x4690ed
// declared property getter: - (id)loadJobs;	// 0x46a895
// declared property getter: - (id)pendingCachedImagesToFlush;	// 0x46a8cd
// declared property getter: - (int)pruneCount;	// 0x46a83d
- (void)purge;	// 0x46a7f9
- (void)purgeAndRemoveDirectory;	// 0x46a7e5
- (id)reallyWriteImageFromURL:(id)url imageID:(id)anId;	// 0x468e11
- (void)receivedRemoteImage:(id)image forID:(id)anId;	// 0x46a471
// declared property setter: - (void)setDisableAccessDateUpdates:(BOOL)updates;	// 0x46a915
// declared property setter: - (void)setImages:(id)images;	// 0x46a86d
// declared property setter: - (void)setLoadJobs:(id)jobs;	// 0x46a8a5
// declared property setter: - (void)setPendingCachedImagesToFlush:(id)flush;	// 0x46a8dd
// declared property setter: - (void)setPruneCount:(int)count;	// 0x46a84d
- (void)writeCroppedImage:(id)image named:(id)named;	// 0x469749
- (id)writeEncryptedImageFromURL:(id)url;	// 0x468cd1
- (void)writeImage:(id)image named:(id)named;	// 0x4692d9
- (void)writeImage:(id)image named:(id)named asynchronous:(BOOL)asynchronous;	// 0x469311
- (id)writeImageFromImageProxy:(id)imageProxy;	// 0x468bf5
- (id)writeImageFromURL:(id)url;	// 0x468ca5
- (id)writeImageFromURL:(id)url decryptionAgent:(id)agent;	// 0x468d6d
- (id)writeImageFromURL:(id)url headerFields:(id)fields decryptionAgent:(id)agent;	// 0x468db9
- (void)writeScaledImage:(id)image named:(id)named withSize:(CGSize)size;	// 0x46968d
@end

