/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "BRTransportDataProvider.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "AppleTV-Structs.h"

@class BREvent, NSMutableArray;
@protocol BRPlayerDelegate;

__attribute__((visibility("hidden")))
@interface BRMediaPlayer : XXUnknownSuperclass <BRTransportDataProvider> {
	NSMutableArray *_stateStack;	// 4 = 0x4
	id<BRPlayerDelegate> _playerDelegate;	// 8 = 0x8
	BREvent *_initiatingEvent;	// 12 = 0xc
	double _playbackStartupSeconds;	// 16 = 0x10
	double _playbackStartupDwellSeconds;	// 24 = 0x18
}
@property(assign) long chapterGroupIndex;	// G=0x44ee0d; S=0x44ee09; converted property
@property(assign) long currentChapterIndex;	// G=0x44edf5; S=0x44edf1; converted property
@property(assign) BOOL disablePlatformFilters;	// G=0x44ee55; S=0x44ee51; converted property
@property(assign) double elapsedTime;	// G=0x44ed59; S=0x44ed51; converted property
@property(assign) unsigned errorBehavior;	// G=0x44eba5; S=0x44eba9; converted property
@property(retain, nonatomic) BREvent *initiatingEvent;	// G=0x44eee5; S=0x44eef5; @synthesize=_initiatingEvent
@property(assign) BOOL isPlaylistDynamic;	// G=0x44f02d; S=0x44f029; converted property
@property(assign) BOOL isPresentable;	// G=0x44efc1; S=0x44efbd; converted property
@property(assign) int mediaAssetEndAction;	// G=0x44eeb9; S=0x44eeb5; converted property
@property(assign) BOOL muted;	// G=0x44f03d; S=0x44f039; converted property
@property(retain) id playbackDate;	// G=0x44ed7d; S=0x44ed79; converted property
@property(assign, nonatomic) double playbackStartupDwellSeconds;	// G=0x44ef49; S=0x44ef61; @synthesize=_playbackStartupDwellSeconds
@property(assign, nonatomic) double playbackStartupSeconds;	// G=0x44ef1d; S=0x44ef35; @synthesize=_playbackStartupSeconds
@property(retain, nonatomic) id<BRPlayerDelegate> playerDelegate;	// G=0x44eec1; S=0x44eed1; @synthesize=_playerDelegate
@property(retain) id playerSpecificOptions;	// G=0x44f095; S=0x44f091; converted property
@property(assign) int playlistEndAction;	// G=0x44eeb1; S=0x44eead; converted property
@property(assign) int repeatMode;	// G=0x44f019; S=0x44f015; converted property
@property(retain) id selectedAudioOption;	// G=0x44eff5; S=0x44eff1; converted property
@property(retain) id selectedMedia;	// G=0x44f001; S=0x44f005; converted property
@property(retain) id selectedSubtitleOption;	// G=0x44efe9; S=0x44efe5; converted property
@property(assign) BOOL shufflePlayback;	// G=0x44f00d; S=0x44f009; converted property
@property(assign) BOOL skipExplicit;	// G=0x44f025; S=0x44f021; converted property
@property(assign) float startPosition;	// G=0x44ed4d; S=0x44ed49; converted property
@property(assign) double startTime;	// G=0x44edb1; S=0x44eda9; converted property
@property(assign) double stopTime;	// G=0x44ed91; S=0x44ed89; converted property
@property(retain) id subtitleOptionFilter;	// G=0x44efdd; S=0x44efd9; converted property
@property(assign) double virtualChapterMark;	// G=0x44edd1; S=0x44edcd; converted property
@property(assign) float volume;	// G=0x44f049; S=0x44f045; converted property
+ (BOOL)allowMultiplePlayers;	// 0x44eb95
+ (id)contentTypes;	// 0x44eb91
+ (BOOL)handlesVideoForType:(id)type;	// 0x44eb99
- (void).cxx_destruct;	// 0x44ef75
- (void)appendMediaList:(id)list;	// 0x44ec01
- (void)appendMediaToSlidingWindow:(id)slidingWindow;	// 0x44ec05
- (BOOL)attemptAuthorizationWithError:(id *)error;	// 0x44ee59
- (id)audioOptions;	// 0x44efed
- (BRTimeRange)bufferedRange;	// 0x44ee31
- (BOOL)bufferedRangeIsSubset;	// 0x44ee3d
- (float)bufferingProgress;	// 0x44ee41
- (id)chapterAtIndex:(long)index;	// 0x44ee29
- (long)chapterCount;	// 0x44ee25
- (id)chapterGroupAtIndex:(long)index;	// 0x44ee11
- (long)chapterGroupCount;	// 0x44ee05
// converted property getter: - (long)chapterGroupIndex;	// 0x44ee0d
- (long)chapterIndexForTime:(double)time;	// 0x44edf9
- (BOOL)chapterIsPlayable:(long)playable;	// 0x44edfd
- (id)chapters;	// 0x44ee21
- (void)clearStack;	// 0x44f335
- (id)collection;	// 0x44ec15
- (BOOL)cueMediaWithError:(id *)error;	// 0x44eca1
// converted property getter: - (long)currentChapterIndex;	// 0x44edf5
- (long)currentInterstitialIndex;	// 0x44ee19
- (id)currentVideoFrame;	// 0x44efcd
- (id)debugStringForState:(int)state;	// 0x44f099
// converted property getter: - (BOOL)disablePlatformFilters;	// 0x44ee55
- (double)duration;	// 0x44ed31
// converted property getter: - (double)elapsedTime;	// 0x44ed59
// converted property getter: - (unsigned)errorBehavior;	// 0x44eba5
- (BOOL)hasRealChapters;	// 0x44ee01
// declared property getter: - (id)initiatingEvent;	// 0x44eee5
- (void)insertMedia:(id)media atIndex:(long)index;	// 0x44ec09
- (id)interstitialTimes;	// 0x44ee15
- (BOOL)isAssetReadyToPlay:(id)play;	// 0x44ee49
// converted property getter: - (BOOL)isPlaylistDynamic;	// 0x44f02d
// converted property getter: - (BOOL)isPresentable;	// 0x44efc1
- (BOOL)isTrackEnabled:(int)enabled;	// 0x44eff9
- (double)keyframeTimeNearTime:(double)time searchForwards:(BOOL)forwards;	// 0x44efd1
- (id)media;	// 0x44ec19
// converted property getter: - (int)mediaAssetEndAction;	// 0x44eeb9
- (int)mediaCount;	// 0x44ec25
- (long)mediaIndex;	// 0x44ec9d
// converted property getter: - (BOOL)muted;	// 0x44f03d
- (void)nextChapter;	// 0x44ede9
- (void)nextMedia;	// 0x44f035
- (int)peekState;	// 0x44f269
// converted property getter: - (id)playbackDate;	// 0x44ed7d
- (id)playbackInfo;	// 0x44ee4d
// declared property getter: - (double)playbackStartupDwellSeconds;	// 0x44ef49
// declared property getter: - (double)playbackStartupSeconds;	// 0x44ef1d
// declared property getter: - (id)playerDelegate;	// 0x44eec1
// converted property getter: - (id)playerSpecificOptions;	// 0x44f095
- (int)playerState;	// 0x44ed25
- (BOOL)playingVisualContent;	// 0x44efc5
// converted property getter: - (int)playlistEndAction;	// 0x44eeb1
- (int)popState;	// 0x44f2b1
- (void)previousChapter;	// 0x44eded
- (void)previousMedia;	// 0x44f031
- (void)purgeTrackList;	// 0x44ec11
- (void)pushState:(int)state;	// 0x44f191
- (id)qualityOfServiceInfo;	// 0x44eebd
- (void)removeMedia:(id)media;	// 0x44ec0d
// converted property getter: - (int)repeatMode;	// 0x44f019
- (void)resetToBeginning;	// 0x44edc9
- (BOOL)reverseTouchSwipeBehavior;	// 0x44eba1
// converted property getter: - (id)selectedAudioOption;	// 0x44eff5
// converted property getter: - (id)selectedMedia;	// 0x44f001
// converted property getter: - (id)selectedSubtitleOption;	// 0x44efe9
// converted property setter: - (void)setChapterGroupIndex:(long)index;	// 0x44ee09
// converted property setter: - (void)setCurrentChapterIndex:(long)index;	// 0x44edf1
// converted property setter: - (void)setDisablePlatformFilters:(BOOL)filters;	// 0x44ee51
// converted property setter: - (void)setElapsedTime:(double)time;	// 0x44ed51
// converted property setter: - (void)setErrorBehavior:(unsigned)behavior;	// 0x44eba9
- (void)setFailedURLDelegate:(id)delegate;	// 0x44f34d
- (void)setForwardPlaybackEndTime:(double)time;	// 0x44ed71
// declared property setter: - (void)setInitiatingEvent:(id)event;	// 0x44eef5
// converted property setter: - (void)setIsPlaylistDynamic:(BOOL)dynamic;	// 0x44f029
// converted property setter: - (void)setIsPresentable:(BOOL)presentable;	// 0x44efbd
- (void)setMediaAsCurrentlyPlayingAppendingTrackList:(id)list;	// 0x44ebfd
// converted property setter: - (void)setMediaAssetEndAction:(int)action;	// 0x44eeb5
- (BOOL)setMediaAtIndex:(long)index inCollection:(id)collection error:(id *)error;	// 0x44ebb1
- (BOOL)setMediaAtIndex:(long)index inTrackList:(id)trackList error:(id *)error;	// 0x44ebad
// converted property setter: - (void)setMuted:(BOOL)muted;	// 0x44f039
// converted property setter: - (void)setPlaybackDate:(id)date;	// 0x44ed79
// declared property setter: - (void)setPlaybackStartupDwellSeconds:(double)seconds;	// 0x44ef61
// declared property setter: - (void)setPlaybackStartupSeconds:(double)seconds;	// 0x44ef35
// declared property setter: - (void)setPlayerDelegate:(id)delegate;	// 0x44eed1
// converted property setter: - (void)setPlayerSpecificOptions:(id)options;	// 0x44f091
// converted property setter: - (void)setPlaylistEndAction:(int)action;	// 0x44eead
// converted property setter: - (void)setRepeatMode:(int)mode;	// 0x44f015
- (void)setReversePlaybackEndTime:(double)time;	// 0x44ed75
// converted property setter: - (void)setSelectedAudioOption:(id)option;	// 0x44eff1
// converted property setter: - (void)setSelectedMedia:(id)media;	// 0x44f005
// converted property setter: - (void)setSelectedSubtitleOption:(id)option;	// 0x44efe5
// converted property setter: - (void)setShufflePlayback:(BOOL)playback;	// 0x44f009
// converted property setter: - (void)setSkipExplicit:(BOOL)anExplicit;	// 0x44f021
- (void)setStartDate:(id)date isEstimate:(BOOL)estimate;	// 0x44ed81
// converted property setter: - (void)setStartPosition:(float)position;	// 0x44ed49
// converted property setter: - (void)setStartTime:(double)time;	// 0x44eda9
- (BOOL)setState:(int)state error:(id *)error;	// 0x44ed21
// converted property setter: - (void)setStopTime:(double)time;	// 0x44ed89
// converted property setter: - (void)setSubtitleOptionFilter:(id)filter;	// 0x44efd9
- (void)setTrackEnabled:(BOOL)enabled forTrackID:(int)trackID;	// 0x44effd
// converted property setter: - (void)setVirtualChapterMark:(double)mark;	// 0x44edcd
// converted property setter: - (void)setVolume:(float)volume;	// 0x44f045
// converted property getter: - (BOOL)shufflePlayback;	// 0x44f00d
// converted property getter: - (BOOL)skipExplicit;	// 0x44f025
- (id)startDate;	// 0x44ed85
// converted property getter: - (float)startPosition;	// 0x44ed4d
// converted property getter: - (double)startTime;	// 0x44edb1
// converted property getter: - (double)stopTime;	// 0x44ed91
- (BOOL)stopsActiveAudioPlayer;	// 0x44eb9d
// converted property getter: - (id)subtitleOptionFilter;	// 0x44efdd
- (id)subtitleOptions;	// 0x44efe1
- (BOOL)supportsBufferedRange;	// 0x44ee2d
- (BOOL)supportsMultipleTrickSpeeds;	// 0x44ed29
- (BOOL)supportsRepeatModes;	// 0x44f01d
- (BOOL)supportsShufflePlayback;	// 0x44f011
- (BOOL)supportsTrickPlay;	// 0x44ed2d
- (BOOL)supportsVolumeControl;	// 0x44f041
- (int)swapState:(int)state;	// 0x44f235
- (id)trackList;	// 0x44ec21
- (id)upNextMedia;	// 0x44ec1d
// converted property getter: - (double)virtualChapterMark;	// 0x44edd1
- (id)visuals;	// 0x44efc9
// converted property getter: - (float)volume;	// 0x44f049
@end

