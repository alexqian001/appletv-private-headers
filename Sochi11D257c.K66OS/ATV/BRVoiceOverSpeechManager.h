/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "VSSpeechSynthesizerDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "AppleTV-Structs.h"

@class NSMutableArray, BRVOSpeechAction, VSSpeechSynthesizer, NSString, NSThread, NSDictionary;

__attribute__((visibility("hidden")))
@interface BRVoiceOverSpeechManager : XXUnknownSuperclass <VSSpeechSynthesizerDelegate> {
	NSMutableArray *_pendingSpeechQueue;	// 4 = 0x4
	BRVOSpeechAction *_currentSpeechAction;	// 8 = 0x8
	VSSpeechSynthesizer *_synthesizer;	// 12 = 0xc
	NSThread *_runThread;	// 16 = 0x10
	NSDictionary *_pronunciationGuide;	// 20 = 0x14
	NSString *_systemLanguage;	// 24 = 0x18
	BOOL _runLoopEnabled;	// 28 = 0x1c
	BOOL _didInitialize;	// 29 = 0x1d
	BOOL _isSpeaking;	// 30 = 0x1e
	BOOL _speechEnabled;	// 31 = 0x1f
	BOOL _isPitchChangeEnabled;	// 32 = 0x20
}
@property(assign, nonatomic) BOOL isPitchChangeEnabled;	// G=0x31b775; S=0x31b785; @synthesize=_isPitchChangeEnabled
@property(readonly, assign) BOOL isSpeaking;	// G=0x31b4d5; converted property
@property(assign, nonatomic) BOOL speechEnabled;	// G=0x31b741; S=0x31afd5; @synthesize=_speechEnabled
@property(assign, nonatomic) float speechRate;	// G=0x31b551; S=0x31b609; @dynamic
@property(copy, nonatomic) NSString *systemLanguage;	// G=0x31b751; S=0x31b765; @synthesize=_systemLanguage
+ (URegularExpression *)createRegularExpressionFromString:(id)string;	// 0x31a3c5
+ (id)matchedRangesForString:(id)string withRegularExpression:(URegularExpression *)regularExpression;	// 0x31a42d
- (id)init;	// 0x319fc9
- (void)_clearPendingSpeechQueue;	// 0x31b15d
- (void)_continueSpeaking;	// 0x31b329
- (void)_dispatchSpeechAction:(id)action;	// 0x31affd
- (void)_initialize;	// 0x31a241
- (void)_isSpeaking:(id)speaking;	// 0x31b47d
- (void)_pauseSpeaking;	// 0x31b281
- (id)_preprocessString:(id)string language:(id)language;	// 0x31ade9
- (id)_processDurationStrings:(id)strings;	// 0x31a9f9
- (id)_processPronunciationChanges:(id)changes language:(id)language;	// 0x31ac81
- (void)_setSpeechRate:(id)rate;	// 0x31b599
- (void)_speechJobFinished:(id)finished;	// 0x31a551
- (void)_startNextSpeechJob;	// 0x31a73d
- (void)_stopSpeaking;	// 0x31b3d1
- (void)clearPendingSpeechQueue;	// 0x31b17d
- (void)continueSpeaking;	// 0x31b38d
- (void)dealloc;	// 0x31a151
- (void)dispatchSpeechAction:(id)action;	// 0x31b1e1
// declared property getter: - (BOOL)isPitchChangeEnabled;	// 0x31b775
// converted property getter: - (BOOL)isSpeaking;	// 0x31b4d5
- (void)pauseSpeaking;	// 0x31b2e5
// declared property setter: - (void)setIsPitchChangeEnabled:(BOOL)enabled;	// 0x31b785
- (void)setMaintainConnection:(BOOL)connection;	// 0x31a531
- (void)setPitch:(id)pitch;	// 0x31a665
// declared property setter: - (void)setSpeechEnabled:(BOOL)enabled;	// 0x31afd5
// declared property setter: - (void)setSpeechRate:(float)rate;	// 0x31b609
// declared property setter: - (void)setSystemLanguage:(id)language;	// 0x31b765
// declared property getter: - (BOOL)speechEnabled;	// 0x31b741
// declared property getter: - (float)speechRate;	// 0x31b551
- (void)speechSynthesizer:(id)synthesizer didFinishSpeaking:(BOOL)speaking withError:(id)error;	// 0x31b6c1
- (void)stopSpeaking;	// 0x31b439
// declared property getter: - (id)systemLanguage;	// 0x31b751
- (void)terminate;	// 0x31b1c1
@end

