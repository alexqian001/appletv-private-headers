/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

typedef struct _NSZone NSZone;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSRange {
	unsigned location;
	unsigned length;
} NSRange;

typedef struct ATVCarouselViewItemsConfig {
	unsigned numberOfPositions;
	NSRange rangeOfFocusablePositions;
	double animationDuration;
} ATVCarouselViewItemsConfig;

typedef struct BRTimeRange {
	double _field1;
	double _field2;
} BRTimeRange;

typedef struct OpaqueJSValue OpaqueJSValue;

typedef struct OpaqueJSContext OpaqueJSContext;

typedef struct CGImage *CGImageRef;

typedef struct __IOSurface *IOSurfaceRef;

typedef struct __CFRunLoopSource *CFRunLoopSourceRef;

typedef struct __CFRunLoop *CFRunLoopRef;

typedef struct AppContext AppContext;

typedef struct __CFString *CFStringRef;
typedef struct ITTunerCategoryInfo {
	ITTunerCategoryInfo *_field1;
	unsigned _field2;
	CFStringRef _field3;
} ITTunerCategoryInfo;

typedef struct ITTunerCategoryList {
	ITTunerCategoryInfo *_field1;
	unsigned _field2;
} ITTunerCategoryList;

typedef struct ITTunerStationURLInfo *ITTunerStationURLInfoRef;
typedef struct ITTunerStationInfo {
	ITTunerStationInfo *_field1;
	CFStringRef _field2;
	CFStringRef _field3;
	ITTunerStationURLInfoRef _field4;
	unsigned _field5;
} ITTunerStationInfo;

typedef struct ITTunerStationList {
	unsigned _field1;
	ITTunerStationInfo *_field2;
	unsigned _field3;
} ITTunerStationList;

struct __CFString *CFStringRef;

struct ITTunerStationURLInfo *ITTunerStationURLInfoRef;

typedef struct ATVStoreRequest *ATVStoreRequestRef;

typedef struct ATVServerRequest *ATVServerRequestRef;

typedef struct __IOHIDEvent *IOHIDEventRef;

typedef struct __GSEvent *GSEventRef;

typedef struct FPSAPContextOpaque_ *FPSAPContextOpaque_Ref;

typedef struct FairPlayHWInfo_ {
	unsigned _field1;
	unsigned char _field2[20];
} FairPlayHWInfo_;

typedef struct __CFHTTPMessage *CFHTTPMessageRef;

typedef struct __CFReadStream *CFReadStreamRef;

typedef struct __CFRunLoopTimer *CFRunLoopTimerRef;

typedef struct {
	struct {
		float _protected_n;
	} readonly_norm;
} XXStruct_qlg9jA;

typedef struct {
	XXStruct_qlg9jA width;
	XXStruct_qlg9jA height;
} XXStruct_40SSZC;

typedef struct UIOffset {
	float _field1;
	float _field2;
} UIOffset;

typedef struct ATVFullScreenPhotoSelectionMemento {
	double timeStamp;
	int index;
} ATVFullScreenPhotoSelectionMemento;

typedef struct UIEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} UIEdgeInsets;

typedef struct __IOHIDEventSystemClient *IOHIDEventSystemClientRef;

typedef struct __IOHIDServiceClient *IOHIDServiceClientRef;

typedef struct sqlite3 sqlite3;

typedef struct __NStatManager NStatManager;

typedef struct __NStatSource NStatSource;

typedef struct NStatCounts {
	unsigned long long nstat_rxpackets;
	unsigned long long nstat_rxbytes;
	unsigned long long nstat_txpackets;
	unsigned long long nstat_txbytes;
	unsigned nstat_rxduplicatebytes;
	unsigned nstat_rxoutoforderbytes;
	unsigned nstat_txretransmit;
	unsigned nstat_connectattempts;
	unsigned nstat_connectsuccesses;
	double nstat_min_rtt;
	double nstat_avg_rtt;
	double nstat_var_rtt;
	unsigned long long nstat_cell_rxbytes;
	unsigned long long nstat_cell_txbytes;
	unsigned long long nstat_wifi_rxbytes;
	unsigned long long nstat_wifi_txbytes;
} NStatCounts;

typedef struct sockaddr {
	unsigned char sa_len;
	unsigned char sa_family;
	BOOL sa_data[14];
} sockaddr;

typedef struct in_addr {
	unsigned s_addr;
} in_addr;

typedef struct sockaddr_in {
	unsigned char sin_len;
	unsigned char sin_family;
	unsigned short sin_port;
	in_addr sin_addr;
	BOOL sin_zero[8];
} sockaddr_in;

typedef struct in6_addr {
	union {
		unsigned char __u6_addr8[16];
		unsigned short __u6_addr16[8];
		unsigned __u6_addr32[4];
	} __u6_addr;
} in6_addr;

typedef struct sockaddr_in6 {
	unsigned char sin6_len;
	unsigned char sin6_family;
	unsigned short sin6_port;
	unsigned sin6_flowinfo;
	in6_addr sin6_addr;
	unsigned sin6_scope_id;
} sockaddr_in6;

typedef struct __WiFiDeviceClient WiFiDeviceClient;

typedef struct _opaque_pthread_mutex_t {
	long __sig;
	BOOL __opaque[40];
} opaque_pthread_mutex_t;

typedef struct __CFSocket *CFSocketRef;

typedef struct __SCNetworkService *SCNetworkServiceRef;

typedef struct __SCPreferences *SCPreferencesRef;

typedef struct CGColor *CGColorRef;

typedef struct CGFont *CGFontRef;

typedef struct OpaqueFigSubtitleRenderer OpaqueFigSubtitleRenderer;

typedef struct {
	int _field1;
	int _field2;
} XXStruct_K5nmsA;

typedef struct CGAffineTransform {
	float _field1;
	float _field2;
	float _field3;
	float _field4;
	float _field5;
	float _field6;
} CGAffineTransform;

typedef struct URegularExpression URegularExpression;

typedef struct CATransform3D {
	float m11;
	float m12;
	float m13;
	float m14;
	float m21;
	float m22;
	float m23;
	float m24;
	float m31;
	float m32;
	float m33;
	float m34;
	float m41;
	float m42;
	float m43;
	float m44;
} CATransform3D;

typedef struct {
	XXStruct_40SSZC origin;
	XXStruct_40SSZC size;
} XXStruct_cVRbiD;

typedef struct CGContext *CGContextRef;

typedef struct CGFunction *CGFunctionRef;

typedef struct SearchCriteriaList SearchCriteriaList;

typedef struct __WiFiNetwork WiFiNetwork;

typedef struct BRFocusEdge {
	CGPoint _field1;
	CGPoint _field2;
} BRFocusEdge;

typedef struct __CTFont *CTFontRef;

typedef struct __SCDynamicStore *SCDynamicStoreRef;

typedef struct __CFDictionary *CFDictionaryRef;

typedef struct __CFArray *CFArrayRef;

typedef struct __CTLine *CTLineRef;

typedef struct __CTTypesetter *CTTypesetterRef;

typedef struct FPLeaseSyncOpaque_ *FPLeaseSyncOpaque_Ref;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} XXStruct_pwHToB;

typedef struct {
	XXStruct_pwHToB start;
	XXStruct_pwHToB duration;
} XXStruct_yD8eWC;

typedef struct RUIPhloatoPlaneImagePosition {
	float _field1;
	float _field2;
} RUIPhloatoPlaneImagePosition;

typedef struct CriterionInfo {
	unsigned _field1;
	unsigned _field2;
	unsigned char _field3;
	unsigned char _field4;
	void *_field5;
	union {
		struct {
			void *_field1;
			unsigned _field2;
		} _field1;
		SearchCriteriaList *_field2;
	} _field6;
} CriterionInfo;

typedef struct MutexInternal MutexInternal;

typedef struct _opaque_pthread_t opaque_pthread_t;

typedef struct Time {
	unsigned long long _field1;
} Time;

typedef struct Mutex {
	/*function-pointer*/ void **_field1;
	MutexInternal *_field2;
	opaque_pthread_t *_field3;
	int _field4;
	Time *_field5;
	bool _field6;
	Time _field7;
} Mutex;

typedef struct ConsoleSink {
	/*function-pointer*/ void **_field1;
	Mutex _field2;
	int _field3;
} ConsoleSink;

typedef struct NrdLibImpl NrdLibImpl;

template<>
struct auto_ptr<netflix::NrdLib::NrdLibImpl> {
	NrdLibImpl *_field1;
};

typedef struct NrdLib {
	auto_ptr<netflix::NrdLib::NrdLibImpl> _field1;
} NrdLib;

typedef struct NBPLauncher *NBPLauncherRef;

typedef struct NBPApplication {
	/*function-pointer*/ void **_field1;
	NBPLauncherRef _field2;
} NBPApplication;

typedef struct XML_ParserStruct *XML_ParserStructRef;

typedef struct {
	unsigned _field1 : 8;
	unsigned _field2 : 4;
	unsigned _field3 : 1;
	unsigned _field4 : 1;
	unsigned _field5 : 18;
	unsigned short _field6[8];
} XXStruct_9isexA;

typedef struct Formatter Formatter;

typedef struct IOSObjCEventConnection {
	/*function-pointer*/ void **_field1;
	unsigned _field2;
	bool _field3;
	bool _field4;
	Formatter *_field5;
} IOSObjCEventConnection;

typedef struct CdnSelection CdnSelection;

template<>
struct _Sp_counted_base<2>;

template<>
struct __shared_count<2> {
	_Sp_counted_base<2> *_M_pi;
};

template<>
struct shared_ptr<netflix::EDSClient::CdnSelection> {
	CdnSelection *_M_ptr;
	__shared_count<2> _M_refcount;
};

typedef struct Manifest Manifest;

template<>
struct shared_ptr<const netflix::ase::Manifest> {
	Manifest *_field1;
	__shared_count<2> _field2;
};

template<>
struct vector<netflix::nccp::CdnEntity, std::allocator<netflix::nccp::CdnEntity> >;

template<>
struct shared_ptr<const std::vector<netflix::nccp::CdnEntity, std::allocator<netflix::nccp::CdnEntity>> > {
	vector<netflix::nccp::CdnEntity, std::allocator<netflix::nccp::CdnEntity> > *_field1;
	__shared_count<2> _field2;
};

typedef struct _Alloc_hider {
	char *_field1;
} Alloc_hider;

template<>
struct basic_string<char, std::char_traits<char>, std::allocator<char> > {
	Alloc_hider _field1;
};

template<>
struct less<std::basic_string<char> >;

typedef struct _Rb_tree_node_base {
	int _field1;
	Rb_tree_node_base *_field2;
	Rb_tree_node_base *_field3;
	Rb_tree_node_base *_field4;
} Rb_tree_node_base;

template<>
struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
	less<std::basic_string<char> > _field1;
	Rb_tree_node_base _field2;
	unsigned _field3;
};

template<>
struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > {
	_Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

template<>
struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > {
	_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > _field1;
};

template<>
struct PrimitiveEntity<unsigned int> {
	/*function-pointer*/ void **_field1;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field2;
	map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > _field3;
	unsigned _field4;
};

template<>
struct PrimitiveEntity<std::basic_string<char> > {
	/*function-pointer*/ void **_field1;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field2;
	map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
};

typedef struct CdnEntity {
	/*function-pointer*/ void **_field1;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field2;
	map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>> > _field3;
	PrimitiveEntity<unsigned int> _field4;
	PrimitiveEntity<std::basic_string<char> > _field5;
	PrimitiveEntity<unsigned int> _field6;
	PrimitiveEntity<unsigned int> _field7;
} CdnEntity;

typedef struct Speed {
	unsigned long long _field1;
	bool _field2;
} Speed;

typedef struct SpeedMeasurement SpeedMeasurement;

template<>
struct shared_ptr<netflix::EDSClient::SpeedMeasurement> {
	SpeedMeasurement *_field1;
	__shared_count<2> _field2;
};

typedef struct Cdn {
	CdnEntity _field1;
	Speed _field2;
	int _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
	shared_ptr<netflix::EDSClient::SpeedMeasurement> _field5;
	bool _field6;
	bool _field7;
	int _field8;
	Time _field9;
	Speed _field10;
	unsigned _field11;
	unsigned _field12;
	unsigned _field13;
	int _field14;
} Cdn;

typedef struct ManifestStream ManifestStream;

template<>
struct shared_ptr<netflix::ase::ManifestStream> {
	ManifestStream *_field1;
	__shared_count<2> _field2;
};

typedef struct SidxIndexTableEntry_tag SidxIndexTableEntry_tag;

typedef struct _Vector_impl {
	SidxIndexTableEntry_tag *_field1;
	SidxIndexTableEntry_tag *_field2;
	SidxIndexTableEntry_tag *_field3;
} Vector_impl;

template<>
struct vector<SidxIndexTableEntry_tag, std::allocator<SidxIndexTableEntry_tag> > {
	Vector_impl _field1;
};

typedef struct SsixIndexTableEntry_tag SsixIndexTableEntry_tag;

typedef struct _Vector_impl {
	SsixIndexTableEntry_tag *_field1;
	SsixIndexTableEntry_tag *_field2;
	SsixIndexTableEntry_tag *_field3;
} Vector_impl;

template<>
struct vector<SsixIndexTableEntry_tag, std::allocator<SsixIndexTableEntry_tag> > {
	Vector_impl _field1;
};

typedef struct ProtectionSystemSpecificHeader {
	unsigned _field1;
	char *_field2;
} ProtectionSystemSpecificHeader;

typedef struct MP4Info {
	/*function-pointer*/ void **_field1;
	unsigned _field2;
	vector<SidxIndexTableEntry_tag, std::allocator<SidxIndexTableEntry_tag> > _field3;
	vector<SsixIndexTableEntry_tag, std::allocator<SsixIndexTableEntry_tag> > _field4;
	ProtectionSystemSpecificHeader _field5;
	unsigned _field6;
	unsigned long long _field7;
	unsigned long long _field8;
	unsigned _field9;
	unsigned long long _field10;
	unsigned long long _field11;
	unsigned long long _field12;
	bool _field13;
	bool _field14;
} MP4Info;

typedef struct HttpStreamReader HttpStreamReader;

template<>
struct shared_ptr<netflix::http::HttpStreamReader> {
	HttpStreamReader *_M_ptr;
	__shared_count<2> _M_refcount;
};

typedef struct IMediaControl {
	/*function-pointer*/ void **_field1;
} IMediaControl;

typedef struct NetflixMediaControlListener {
	/*function-pointer*/ void **_field1;
} NetflixMediaControlListener;

typedef struct AseTimeVal {
	unsigned long long _field1;
} AseTimeVal;

typedef struct _Vector_impl {
	unsigned *_field1;
	unsigned *_field2;
	unsigned *_field3;
} Vector_impl;

template<>
struct vector<unsigned int, std::allocator<unsigned int> > {
	Vector_impl _field1;
};

typedef struct BwEntry {
	AseTimeVal _field1;
	AseTimeVal _field2;
	unsigned _field3;
	vector<unsigned int, std::allocator<unsigned int> > _field4;
} BwEntry;

typedef struct _Vector_impl {
	char *_field1;
	char *_field2;
	char *_field3;
} Vector_impl;

template<>
struct vector<unsigned char, std::allocator<unsigned char> > {
	Vector_impl _field1;
};


